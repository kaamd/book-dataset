import altair as alt
import pandas as pd
import streamlit as st

# –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
st.set_page_config(page_title="Book dataset", page_icon="üìö")
st.title("üìö Book dataset")
st.write(
    """
    –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ —è–ø–æ–Ω—Å–∫–∏—Ö –∞–≤—Ç–æ—Ä–æ–≤, –∫–Ω–∏–≥–∏ –∫–æ—Ç–æ—Ä—ã—Ö –∏–∑–¥–∞–≤–∞–ª–∏—Å—å —á–∞—â–µ –¥—Ä—É–≥–∏—Ö –≤ –†–æ—Å—Å–∏–∏.
    """
)
# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ CSV.
@st.cache_data
def load_data():
    df = pd.read_csv("japanese_books.csv")
    return df
df = load_data()

# –í—ã–±–æ—Ä –∞–≤—Ç–æ—Ä–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ DataFrame
authors = st.multiselect(
    "–í—ã–±–µ—Ä–∏—Ç–µ –∞–≤—Ç–æ—Ä–æ–≤",
    options=sorted(df["author"].unique()),  # –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ –∞–≤—Ç–æ—Ä–æ–≤ –Ω–∞–ø—Ä—è–º—É—é
    default=[
        "–ö–æ—Ç–∞—Ä–æ –ò—Å–∞–∫–∞", 
        "–°–æ–¥–∑–∏ –°–∏–º–∞–¥–∞", 
        "–•–∞—Ä—É–∫–∏ –ú—É—Ä–∞–∫–∞–º–∏", 
        "–ù–∞—Ü—É—Ö–∏–∫–æ –ö—ë–≥–æ–∫—É", 
        "–ö–∞–Ω–∞—ç –ú–∏–Ω–∞—Ç–æ", 
        "–ê—à–∞ –õ–µ–º–º–∏", 
        "–ö—ç–π–≥–æ –•–∏–≥–∞—Å–∏–Ω–æ", 
        "–•–∞—Ä–æ–ª—å–¥ –°–∞–∫—É–∏—Å–∏", 
        "–¢–æ—Ä—É –§—É–¥–∑–∏—Å–∞–≤–∞",
    ],
)
# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è DataFrame –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∞–≤—Ç–æ—Ä–∞–º
if authors:
    df_filtered = df[df["author"].isin(authors)][["author", "title", "link"]].reset_index(drop=True)
# –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if not df_filtered.empty:
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä–∞
        df_filtered['‚Ññ'] = range(1, len(df_filtered) + 1)
# –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–∏–≥ —É –∫–∞–∂–¥–æ–≥–æ –∞–≤—Ç–æ—Ä–∞
        author_counts = df_filtered['author'].value_counts().reset_index()
        author_counts.columns = ['author', 'count']
# –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        df_merged = df_filtered.merge(author_counts, on='author')
# –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫–Ω–∏–≥ –æ—Ç –±–æ–ª—å—à–µ–≥–æ –∫ –º–µ–Ω—å—à–µ–º—É
        df_sorted = df_merged.sort_values(by='count', ascending=False)
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ "–æ –∫–Ω–∏–≥–µ" —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∫–Ω–∏–≥—É
        df_sorted['–æ –∫–Ω–∏–≥–µ'] = df_sorted['link'].apply(lambda x: f'<a href="{x}">–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–Ω–∏–≥—É</a>')
# –ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ
        df_final = df_sorted[['‚Ññ','author', 'title', '–æ –∫–Ω–∏–≥–µ']]
# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    st.markdown(
    """
    <style>
    .streamlit-table {
        border-collapse: collapse;
        width: 100%;
    }
    
    .streamlit-table th, .streamlit-table td {
        max-width: 200px;
        text-align: left;
        padding: 5px;
        overflow-wrap: break-word;
        word-wrap: break-word;
        word-break: break-word;
        white-space: normal;
        border: 1px solid #ddd;
    }
    
    .streamlit-table th {
        background-color: #D0E9C6; /* –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ */
    }
    </style>
    """,
    unsafe_allow_html=True
)
# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        st.dataframe(
            df_final.style.set_table_attributes('class="streamlit-table"'),
            use_container_width=True,
        )
# –ü–æ–ª—É—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ
        unique_authors_order = df_final['author'].tolist()
# –ü–æ–¥–≥–æ—Ç–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–æ–ª–±—á–∞—Ç–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
        df_chart = df_filtered.groupby(['author', 'title']).size().reset_index(name='count')
# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ count —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º
        chart = alt.Chart(df_chart).mark_bar().encode(
        x=alt.X('sum(count):Q', title='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥', axis=alt.Axis(format='d', ticks=True, grid=False)),  # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Å—å X –∫–∞–∫ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
        y=alt.Y('author:N', title='–ê–≤—Ç–æ—Ä—ã', sort=unique_authors_order),  # –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ—Ä—è–¥–æ–∫ –∏–∑ —Å–ø–∏—Å–∫–∞,
        color='title:N',  # –¶–≤–µ—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–Ω–∏–≥–∏
        tooltip=['title:N', 'count:Q']  # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        ).properties(height=400)    
# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞ –æ—Å–∏ X –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        chart = chart.encode(
        x=alt.X('sum(count):Q', title='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥', axis=alt.Axis(format='d', ticks=True, grid=False, values=[0, 1, 2, 3, 4, 5]))  # –£–∫–∞–∑–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏–º –≤–∏–¥–µ—Ç—å –Ω–∞ –æ—Å–∏ X
        )
# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ —Å—Ç–æ–ª–±—á–∞—Ç–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
        st.altair_chart(chart, use_container_width=True)
else:
        st.write("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –∞–≤—Ç–æ—Ä–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞.")
